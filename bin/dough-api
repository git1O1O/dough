#!/usr/bin/env python
# -*- coding: utf8 -*-

import traceback
import sys

import zmq

from nova import context as nova_context
from nova import flags
from nova import log as logging
from nova import utils

from dough import api

utils.default_flagfile(filename='/etc/dough/dough.conf')
flags.FLAGS(sys.argv)
logging.setup()

FLAGS = flags.FLAGS

if __name__ == '__main__':
    context = zmq.Context()

    # Socket to receive messages on
    handler = context.socket(zmq.REP)
    handler.bind("tcp://%s:%s" % (FLAGS.api_listen, FLAGS.api_listen_port))

    poller = zmq.Poller()
    poller.register(handler, zmq.POLLIN)

    # NOTE(lzyeval): For temporary use only!
    context = nova_context.get_admin_context()

    while True:
        socks = dict(poller.poll())
        if socks.get(handler) == zmq.POLLIN:
            msg_type, msg_uuid, msg_json = handler.recv_multipart()
            response = dict()
            cli_msg = {'status': 200, 'description': 'OK'}
            try:
                msg_body = utils.loads(msg_json)
                method = msg_body['method']
                args = msg_body['args']
                method_func = getattr(api, method)
                response = method_func(context, **args)
            except Exception, e:
                print traceback.format_exc()
                cli_msg['status'] = 500
                cli_msg['description'] = str(e)
            response.update(cli_msg)
            handler.send_multipart([msg_type, msg_uuid,
                                    utils.dumps(response)])
